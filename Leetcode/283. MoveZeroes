Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

C++:
void moveZeroes(vector<int>& nums) {
    vector<int>::iterator it = nums.begin();
    int len = nums.size();
    for (int i = 0; i != len; i++) {
        if (*it == 0) {
            it = nums.erase(it);
            nums.push_back(0);
        } else {
            it++;
        }
    }
}

Java:
public void moveZeroes(int[] nums) {
    int len = nums.length;
    int lastZeroI = 0, temp;
    for (int i = 0; i < len; i++) {
        if (nums[i] != 0) {
            temp = nums[i];
            nums[i] = nums[lastZeroI];
            nums[lastZeroI++] = temp;
        } 
    }
}
